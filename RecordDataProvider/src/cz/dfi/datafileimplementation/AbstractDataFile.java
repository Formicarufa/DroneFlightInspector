/*
 */
package cz.dfi.datafileimplementation;

import cz.dfi.recorddataprovider.DataFileInfo;
import cz.dfi.recorddataprovider.FileStateChangedListener;
import cz.dfi.recorddataprovider.OpenedFilesManager;
import java.util.ArrayList;
import java.util.List;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;

/**
 *
 * @author Tomas Prochazka
 */
@Deprecated
    public class AbstractDataFile extends TopComponent implements DataFileInfo {

    private static int assignedId = 0;
    private final int id;
    private final List<FileStateChangedListener> fileClosedListeners = new ArrayList<>();
    private final OpenedFilesManager openedFilesManager;

    @Override
    public int getId() {
        return id;
    }

    @Override
    public void addFileStateChangedListener(FileStateChangedListener l) {
        fileClosedListeners.add(l);
    }

    @Override
    public void removeFileStateChangedListener(FileStateChangedListener l) {
        fileClosedListeners.remove(l);
    }

    /**
     * Creates new form AbstractDataFile
     */
    public AbstractDataFile() {
        initComponents();
        this.id = assignedId++;
        openedFilesManager = Lookup.getDefault().lookup(OpenedFilesManager.class);

    }

    @Override
    protected void componentActivated() {
        super.componentActivated(); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    protected void componentClosed() {
        super.componentClosed();
        notifyFileClosed();
    }

    @Override
    protected void componentOpened() {
        super.componentOpened();
        openedFilesManager.newFileOpened(this);
    }

    private void notifyFileClosed() {
        fileClosedListeners.stream().forEach((FileStateChangedListener fileClosedListener) -> {
            fileClosedListener.fileClosed(this);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
